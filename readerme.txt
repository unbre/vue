1.项目准备
1.1安装node.js 安装成功后 cmd输入： node -v ；查看node的版本号，cmd输入： npm -v ；查看npm的版本号
1.2安装webpack
    安装步骤查看：https://www.webpackjs.com/guides/getting-started/#%E5%9F%BA%E6%9C%AC%E5%AE%89%E8%A3%85
    遇到问题查看：https://blog.csdn.net/hqbootstrap1/article/details/81034435
    本地安装：
    对于大多数项目，我们建议本地安装。这可以使我们在引入破坏式变更
    (breaking change)的依赖时，更容易分别升级项目。通常，webpack 通过运行一个或多个
     npm scripts，会在本地 node_modules 目录中查找安装的 webpack
     具体步骤：
     (1) 本地安装webpack webpack-cli:
       mkdir webpack-demo && cd webpack-demo
       npm init -y
       npm install webpack webpack-cli --save-dev
    （2）创建以下目录结构、文件和内容
       src/index.js 写上相应的脚本
       dist/index.html
    (3)创建一个 bundle 文件
        在 index.js 中打包 lodash 依赖，我们需要在本地安装 library：
        npm install --save lodash
        在我们的脚本中 import lodash
        src/index.js第一行导入 :import _ from 'lodash';
    （4）使用配置文件的方式创建
       在project中创建： webpack.config.js
       模板格式：
       const path = require('path');

       module.exports = {
           entry: './src/index.js',//需要打包的js文件
           output: {
               filename: 'bundle.js',//打包后文件名称
               path: path.resolve(__dirname, 'dist')//打包后存储的位置
           }
       };
     （5）通过新配置文件执行构建
        方式一：在project目录下执行：在 windows 中通过调用路径去调用 webpack 时，必须使用反斜线()。例如 node_modules\.bin\webpack --config webpack.config.js。
        方式二：NPM脚本执行（推荐使用）
        package.json 文件中script 中追加一句："build": "webpack"
        可以使用 npm run build 命令，来替代我们之前使用的 npx 命令。



